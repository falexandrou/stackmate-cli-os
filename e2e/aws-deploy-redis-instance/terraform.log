
[0m[1mInitializing the backend...[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Finding hashicorp/aws versions matching "5.25.0"...
- Installing hashicorp/aws v5.25.0...
- Installed hashicorp/aws v5.25.0 (signed by HashiCorp)

Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mMissing required argument[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tf.json line 145, in resource.aws_elasticache_parameter_group.aws_redis_1_params:
[31mâ”‚[0m [0m 145:       [4m}[0m[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThe argument "name" is required, but no definition was found.
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mMissing required argument[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tf.json line 145, in resource.aws_elasticache_parameter_group.aws_redis_1_params:
[31mâ”‚[0m [0m 145:       [4m}[0m[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThe argument "name" is required, but no definition was found.
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_cloudwatch_log_group.aws_redis_1_log_group[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "aws_redis_1_log_group" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m name              = "aws_redis_1-log-group"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 0
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # aws_elasticache_cluster.aws_redis_1[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_cluster" "aws_redis_1" {
      [32m+[0m[0m apply_immediately          = true
      [32m+[0m[0m arn                        = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade = "true"
      [32m+[0m[0m availability_zone          = (known after apply)
      [32m+[0m[0m az_mode                    = (known after apply)
      [32m+[0m[0m cache_nodes                = (known after apply)
      [32m+[0m[0m cluster_address            = (known after apply)
      [32m+[0m[0m cluster_id                 = "dreary-ceiling-production"
      [32m+[0m[0m configuration_endpoint     = (known after apply)
      [32m+[0m[0m engine                     = "redis"
      [32m+[0m[0m engine_version             = "7.0"
      [32m+[0m[0m engine_version_actual      = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m ip_discovery               = (known after apply)
      [32m+[0m[0m maintenance_window         = (known after apply)
      [32m+[0m[0m network_type               = (known after apply)
      [32m+[0m[0m node_type                  = "cache.t3.micro"
      [32m+[0m[0m num_cache_nodes            = 1
      [32m+[0m[0m parameter_group_name       = "stackmate-dreary-ceiling-production"
      [32m+[0m[0m port                       = 6379
      [32m+[0m[0m preferred_outpost_arn      = (known after apply)
      [32m+[0m[0m replication_group_id       = (known after apply)
      [32m+[0m[0m security_group_ids         = (known after apply)
      [32m+[0m[0m snapshot_retention_limit   = 7
      [32m+[0m[0m snapshot_window            = (known after apply)
      [32m+[0m[0m subnet_group_name          = (known after apply)
      [32m+[0m[0m tags_all                   = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m transit_encryption_enabled = (known after apply)

      [32m+[0m[0m log_delivery_configuration {
          [32m+[0m[0m destination      = "aws_redis_1-log-group"
          [32m+[0m[0m destination_type = "cloudwatch-logs"
          [32m+[0m[0m log_format       = "text"
          [32m+[0m[0m log_type         = "slow-log"
        }
    }

[1m  # aws_elasticache_parameter_group.aws_redis_1_params[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_parameter_group" "aws_redis_1_params" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m family      = "default.redis7"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stackmate-dreary-ceiling-production"
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # aws_elasticache_subnet_group.aws_redis_1-subnetGroup[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_subnet_group" "aws_redis_1-subnetGroup" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "dreary-ceiling-production-subnet-group"
      [32m+[0m[0m subnet_ids  = (known after apply)
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_internet_gateway.aws_networking_1_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "aws_networking_1_gateway" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # aws_kms_key.aws_provider_1_key[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "aws_provider_1_key" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 30
      [32m+[0m[0m description                        = "Stackmate default encryption key"
      [32m+[0m[0m enable_key_rotation                = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = false
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_subnet.aws_networking_1_subnet1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.aws_networking_1_subnet2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_vpc.aws_networking_1[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "aws_networking_1" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
  [32m+[0m[0m aws_networking_1_vpc_id         = (known after apply)
  [32m+[0m[0m aws_provider_1_kms_key_id       = (known after apply)
  [32m+[0m[0m aws_redis_1_endpoint            = (known after apply)

[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 12, in run "end-to-end":
[31mâ”‚[0m [0m  12:     condition     = [4mcan(aws_vpc.aws_networking_1.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 23, in run "end-to-end":
[31mâ”‚[0m [0m  23:     condition     = [4mcan(aws_kms_key.aws_provider_1_key)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_kms_key.aws_provider_1_key[0m is object with 16 attributes
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 34, in run "end-to-end":
[31mâ”‚[0m [0m  34:     condition     = [4maws_internet_gateway.aws_networking_1_gateway.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_internet_gateway.aws_networking_1_gateway.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 50, in run "end-to-end":
[31mâ”‚[0m [0m  50:     condition     = [4maws_subnet.aws_networking_1_subnet1.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet1.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 55, in run "end-to-end":
[31mâ”‚[0m [0m  55:     condition     = [4maws_subnet.aws_networking_1_subnet2.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet2.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mReference to undeclared resource[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 61, in run "end-to-end":
[31mâ”‚[0m [0m  61:     condition     = can([4maws_db_instance.aws_mysql_1[0m.id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mA managed resource "aws_db_instance" "aws_mysql_1" has not been declared in
[31mâ”‚[0m [0mthe root module.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains([4maws_db_instance[0m.aws_mysql_1.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_db_instance".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mReference to undeclared resource[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains([4maws_db_instance.aws_mysql_1[0m.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mA managed resource "aws_db_instance" "aws_mysql_1" has not been declared in
[31mâ”‚[0m [0mthe root module.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_db_instance.aws_mysql_1.vpc_security_group_ids, [4maws_vpc[0m.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_vpc".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 71, in run "end-to-end":
[31mâ”‚[0m [0m  71:     condition     = [4maws_db_instance[0m.aws_mysql_1.engine == "mysql"[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_db_instance".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mReference to undeclared resource[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 71, in run "end-to-end":
[31mâ”‚[0m [0m  71:     condition     = [4maws_db_instance.aws_mysql_1[0m.engine == "mysql"[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mA managed resource "aws_db_instance" "aws_mysql_1" has not been declared in
[31mâ”‚[0m [0mthe root module.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mReference to undeclared resource[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 77, in run "end-to-end":
[31mâ”‚[0m [0m  77:     condition     = can(regex("^mysql[0-9.]", [4maws_db_parameter_group.aws_mysql_1_params[0m.family))[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mA managed resource "aws_db_parameter_group" "aws_mysql_1_params" has not
[31mâ”‚[0m [0mbeen declared in the root module.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mReference to undeclared resource[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 83, in run "end-to-end":
[31mâ”‚[0m [0m  83:     condition     = can([4maws_db_subnet_group.aws_mysql_1-subnetGroup[0m.id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mA managed resource "aws_db_subnet_group" "aws_mysql_1-subnetGroup" has not
[31mâ”‚[0m [0mbeen declared in the root module.
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_cloudwatch_log_group.aws_redis_1_log_group[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "aws_redis_1_log_group" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m name              = "aws_redis_1-log-group"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 0
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # aws_elasticache_cluster.aws_redis_1[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_cluster" "aws_redis_1" {
      [32m+[0m[0m apply_immediately          = true
      [32m+[0m[0m arn                        = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade = "true"
      [32m+[0m[0m availability_zone          = (known after apply)
      [32m+[0m[0m az_mode                    = (known after apply)
      [32m+[0m[0m cache_nodes                = (known after apply)
      [32m+[0m[0m cluster_address            = (known after apply)
      [32m+[0m[0m cluster_id                 = "those-peer-to-peer-production"
      [32m+[0m[0m configuration_endpoint     = (known after apply)
      [32m+[0m[0m engine                     = "redis"
      [32m+[0m[0m engine_version             = "7.0"
      [32m+[0m[0m engine_version_actual      = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m ip_discovery               = (known after apply)
      [32m+[0m[0m maintenance_window         = (known after apply)
      [32m+[0m[0m network_type               = (known after apply)
      [32m+[0m[0m node_type                  = "cache.t3.micro"
      [32m+[0m[0m num_cache_nodes            = 1
      [32m+[0m[0m parameter_group_name       = "stackmate-those-peer-to-peer-production"
      [32m+[0m[0m port                       = 6379
      [32m+[0m[0m preferred_outpost_arn      = (known after apply)
      [32m+[0m[0m replication_group_id       = (known after apply)
      [32m+[0m[0m security_group_ids         = (known after apply)
      [32m+[0m[0m snapshot_retention_limit   = 7
      [32m+[0m[0m snapshot_window            = (known after apply)
      [32m+[0m[0m subnet_group_name          = (known after apply)
      [32m+[0m[0m tags_all                   = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m transit_encryption_enabled = (known after apply)

      [32m+[0m[0m log_delivery_configuration {
          [32m+[0m[0m destination      = "aws_redis_1-log-group"
          [32m+[0m[0m destination_type = "cloudwatch-logs"
          [32m+[0m[0m log_format       = "text"
          [32m+[0m[0m log_type         = "slow-log"
        }
    }

[1m  # aws_elasticache_parameter_group.aws_redis_1_params[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_parameter_group" "aws_redis_1_params" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m family      = "default.redis7"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stackmate-those-peer-to-peer-production"
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # aws_elasticache_subnet_group.aws_redis_1-subnetGroup[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_subnet_group" "aws_redis_1-subnetGroup" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "those-peer-to-peer-production-subnet-group"
      [32m+[0m[0m subnet_ids  = (known after apply)
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_internet_gateway.aws_networking_1_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "aws_networking_1_gateway" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # aws_kms_key.aws_provider_1_key[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "aws_provider_1_key" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 30
      [32m+[0m[0m description                        = "Stackmate default encryption key"
      [32m+[0m[0m enable_key_rotation                = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = false
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_subnet.aws_networking_1_subnet1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.aws_networking_1_subnet2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_vpc.aws_networking_1[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "aws_networking_1" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
  [32m+[0m[0m aws_networking_1_vpc_id         = (known after apply)
  [32m+[0m[0m aws_provider_1_kms_key_id       = (known after apply)
  [32m+[0m[0m aws_redis_1_endpoint            = (known after apply)

[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 12, in run "end-to-end":
[31mâ”‚[0m [0m  12:     condition     = [4mcan(aws_vpc.aws_networking_1.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 23, in run "end-to-end":
[31mâ”‚[0m [0m  23:     condition     = [4mcan(aws_kms_key.aws_provider_1_key)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_kms_key.aws_provider_1_key[0m is object with 16 attributes
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 34, in run "end-to-end":
[31mâ”‚[0m [0m  34:     condition     = [4maws_internet_gateway.aws_networking_1_gateway.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_internet_gateway.aws_networking_1_gateway.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 50, in run "end-to-end":
[31mâ”‚[0m [0m  50:     condition     = [4maws_subnet.aws_networking_1_subnet1.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet1.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 55, in run "end-to-end":
[31mâ”‚[0m [0m  55:     condition     = [4maws_subnet.aws_networking_1_subnet2.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet2.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 61, in run "end-to-end":
[31mâ”‚[0m [0m  61:     condition     = [4mcan(aws_elasticache_cluster.aws_redis_1.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_cluster.aws_redis_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains([4maws_elasticache_cluster[0m.aws_redis_1.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_elasticache_cluster".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnsupported attribute[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1[4m.vpc_security_group_ids[0m, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThis object has no argument, nested block, or exported attribute named
[31mâ”‚[0m [0m"vpc_security_group_ids".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1.vpc_security_group_ids, [4maws_vpc[0m.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_vpc".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mTest assertion failed[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 77, in run "end-to-end":
[31mâ”‚[0m [0m  77:     condition     = [4mcan(regex("^redis[0-9.]", aws_elasticache_parameter_group.aws_redis_1_params.family))[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_parameter_group.aws_redis_1_params.family[0m is "default.redis7"
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mThe redis parameter group is invalid
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 83, in run "end-to-end":
[31mâ”‚[0m [0m  83:     condition     = [4mcan(aws_elasticache_subnet_group.aws_redis_1-subnetGroup.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_subnet_group.aws_redis_1-subnetGroup.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 89, in run "end-to-end":
[31mâ”‚[0m [0m  89:     condition     = [4mcan(aws_cloudwatch_log_group.aws_redis_1_log_group.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_cloudwatch_log_group.aws_redis_1_log_group.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mCannot index a set value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = can(aws_elasticache_cluster.aws_redis_1.log_delivery_configuration[4m.destination[0m == aws_cloudwatch_log_group.aws_redis_1_log_group.name)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mBlock type "log_delivery_configuration" is represented by a set of objects,
[31mâ”‚[0m [0mand set elements do not have addressable keys. To find elements matching
[31mâ”‚[0m [0mspecific criteria, use a "for" expression with an "if" clause.
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_cloudwatch_log_group.aws_redis_1_log_group[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "aws_redis_1_log_group" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m name              = "aws_redis_1-log-group"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 0
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # aws_elasticache_cluster.aws_redis_1[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_cluster" "aws_redis_1" {
      [32m+[0m[0m apply_immediately          = true
      [32m+[0m[0m arn                        = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade = "true"
      [32m+[0m[0m availability_zone          = (known after apply)
      [32m+[0m[0m az_mode                    = (known after apply)
      [32m+[0m[0m cache_nodes                = (known after apply)
      [32m+[0m[0m cluster_address            = (known after apply)
      [32m+[0m[0m cluster_id                 = "hot-hold-production"
      [32m+[0m[0m configuration_endpoint     = (known after apply)
      [32m+[0m[0m engine                     = "redis"
      [32m+[0m[0m engine_version             = "7.0"
      [32m+[0m[0m engine_version_actual      = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m ip_discovery               = (known after apply)
      [32m+[0m[0m maintenance_window         = (known after apply)
      [32m+[0m[0m network_type               = (known after apply)
      [32m+[0m[0m node_type                  = "cache.t3.micro"
      [32m+[0m[0m num_cache_nodes            = 1
      [32m+[0m[0m parameter_group_name       = "stackmate-hot-hold-production"
      [32m+[0m[0m port                       = 6379
      [32m+[0m[0m preferred_outpost_arn      = (known after apply)
      [32m+[0m[0m replication_group_id       = (known after apply)
      [32m+[0m[0m security_group_ids         = (known after apply)
      [32m+[0m[0m snapshot_retention_limit   = 7
      [32m+[0m[0m snapshot_window            = (known after apply)
      [32m+[0m[0m subnet_group_name          = (known after apply)
      [32m+[0m[0m tags_all                   = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m transit_encryption_enabled = (known after apply)

      [32m+[0m[0m log_delivery_configuration {
          [32m+[0m[0m destination      = "aws_redis_1-log-group"
          [32m+[0m[0m destination_type = "cloudwatch-logs"
          [32m+[0m[0m log_format       = "text"
          [32m+[0m[0m log_type         = "slow-log"
        }
    }

[1m  # aws_elasticache_parameter_group.aws_redis_1_params[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_parameter_group" "aws_redis_1_params" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m family      = "default.redis7"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stackmate-hot-hold-production"
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # aws_elasticache_subnet_group.aws_redis_1-subnetGroup[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_subnet_group" "aws_redis_1-subnetGroup" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "hot-hold-production-subnet-group"
      [32m+[0m[0m subnet_ids  = (known after apply)
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_internet_gateway.aws_networking_1_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "aws_networking_1_gateway" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # aws_kms_key.aws_provider_1_key[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "aws_provider_1_key" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 30
      [32m+[0m[0m description                        = "Stackmate default encryption key"
      [32m+[0m[0m enable_key_rotation                = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = false
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_subnet.aws_networking_1_subnet1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.aws_networking_1_subnet2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_vpc.aws_networking_1[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "aws_networking_1" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
  [32m+[0m[0m aws_networking_1_vpc_id         = (known after apply)
  [32m+[0m[0m aws_provider_1_kms_key_id       = (known after apply)
  [32m+[0m[0m aws_redis_1_endpoint            = (known after apply)

[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 12, in run "end-to-end":
[31mâ”‚[0m [0m  12:     condition     = [4mcan(aws_vpc.aws_networking_1.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 23, in run "end-to-end":
[31mâ”‚[0m [0m  23:     condition     = [4mcan(aws_kms_key.aws_provider_1_key)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_kms_key.aws_provider_1_key[0m is object with 16 attributes
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 34, in run "end-to-end":
[31mâ”‚[0m [0m  34:     condition     = [4maws_internet_gateway.aws_networking_1_gateway.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_internet_gateway.aws_networking_1_gateway.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 50, in run "end-to-end":
[31mâ”‚[0m [0m  50:     condition     = [4maws_subnet.aws_networking_1_subnet1.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet1.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 55, in run "end-to-end":
[31mâ”‚[0m [0m  55:     condition     = [4maws_subnet.aws_networking_1_subnet2.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet2.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 61, in run "end-to-end":
[31mâ”‚[0m [0m  61:     condition     = [4mcan(aws_elasticache_cluster.aws_redis_1.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_cluster.aws_redis_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains([4maws_elasticache_cluster[0m.aws_redis_1.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_elasticache_cluster".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnsupported attribute[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1[4m.vpc_security_group_ids[0m, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThis object has no argument, nested block, or exported attribute named
[31mâ”‚[0m [0m"vpc_security_group_ids".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1.vpc_security_group_ids, [4maws_vpc[0m.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_vpc".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mTest assertion failed[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 77, in run "end-to-end":
[31mâ”‚[0m [0m  77:     condition     = [4mcan(regex("^redis[0-9.]", aws_elasticache_parameter_group.aws_redis_1_params.family))[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_parameter_group.aws_redis_1_params.family[0m is "default.redis7"
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mThe redis parameter group is invalid
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 83, in run "end-to-end":
[31mâ”‚[0m [0m  83:     condition     = [4mcan(aws_elasticache_subnet_group.aws_redis_1-subnetGroup.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_subnet_group.aws_redis_1-subnetGroup.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 89, in run "end-to-end":
[31mâ”‚[0m [0m  89:     condition     = [4mcan(aws_cloudwatch_log_group.aws_redis_1_log_group.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_cloudwatch_log_group.aws_redis_1_log_group.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = [4maws_elasticache_cluster[0m.aws_redis_1.log_delivery_configuration.destination == aws_cloudwatch_log_group.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_elasticache_cluster".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mCannot index a set value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = aws_elasticache_cluster.aws_redis_1.log_delivery_configuration[4m.destination[0m == aws_cloudwatch_log_group.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mBlock type "log_delivery_configuration" is represented by a set of objects,
[31mâ”‚[0m [0mand set elements do not have addressable keys. To find elements matching
[31mâ”‚[0m [0mspecific criteria, use a "for" expression with an "if" clause.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = aws_elasticache_cluster.aws_redis_1.log_delivery_configuration.destination == [4maws_cloudwatch_log_group[0m.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_cloudwatch_log_group".
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_cloudwatch_log_group.aws_redis_1_log_group[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "aws_redis_1_log_group" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m name              = "aws_redis_1-log-group"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m retention_in_days = 0
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags_all          = (known after apply)
    }

[1m  # aws_elasticache_cluster.aws_redis_1[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_cluster" "aws_redis_1" {
      [32m+[0m[0m apply_immediately          = true
      [32m+[0m[0m arn                        = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade = "true"
      [32m+[0m[0m availability_zone          = (known after apply)
      [32m+[0m[0m az_mode                    = (known after apply)
      [32m+[0m[0m cache_nodes                = (known after apply)
      [32m+[0m[0m cluster_address            = (known after apply)
      [32m+[0m[0m cluster_id                 = "flustered-oatmeal-production"
      [32m+[0m[0m configuration_endpoint     = (known after apply)
      [32m+[0m[0m engine                     = "redis"
      [32m+[0m[0m engine_version             = "7.0"
      [32m+[0m[0m engine_version_actual      = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m ip_discovery               = (known after apply)
      [32m+[0m[0m maintenance_window         = (known after apply)
      [32m+[0m[0m network_type               = (known after apply)
      [32m+[0m[0m node_type                  = "cache.t3.micro"
      [32m+[0m[0m num_cache_nodes            = 1
      [32m+[0m[0m parameter_group_name       = "stackmate-flustered-oatmeal-production"
      [32m+[0m[0m port                       = 6379
      [32m+[0m[0m preferred_outpost_arn      = (known after apply)
      [32m+[0m[0m replication_group_id       = (known after apply)
      [32m+[0m[0m security_group_ids         = (known after apply)
      [32m+[0m[0m snapshot_retention_limit   = 7
      [32m+[0m[0m snapshot_window            = (known after apply)
      [32m+[0m[0m subnet_group_name          = (known after apply)
      [32m+[0m[0m tags_all                   = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m transit_encryption_enabled = (known after apply)

      [32m+[0m[0m log_delivery_configuration {
          [32m+[0m[0m destination      = "aws_redis_1-log-group"
          [32m+[0m[0m destination_type = "cloudwatch-logs"
          [32m+[0m[0m log_format       = "text"
          [32m+[0m[0m log_type         = "slow-log"
        }
    }

[1m  # aws_elasticache_parameter_group.aws_redis_1_params[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_parameter_group" "aws_redis_1_params" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m family      = "default.redis7"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stackmate-flustered-oatmeal-production"
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # aws_elasticache_subnet_group.aws_redis_1-subnetGroup[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_subnet_group" "aws_redis_1-subnetGroup" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "flustered-oatmeal-production-subnet-group"
      [32m+[0m[0m subnet_ids  = (known after apply)
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_internet_gateway.aws_networking_1_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "aws_networking_1_gateway" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # aws_kms_key.aws_provider_1_key[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "aws_provider_1_key" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 30
      [32m+[0m[0m description                        = "Stackmate default encryption key"
      [32m+[0m[0m enable_key_rotation                = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = false
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_subnet.aws_networking_1_subnet1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.aws_networking_1_subnet2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_vpc.aws_networking_1[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "aws_networking_1" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
  [32m+[0m[0m aws_networking_1_vpc_id         = (known after apply)
  [32m+[0m[0m aws_provider_1_kms_key_id       = (known after apply)
  [32m+[0m[0m aws_redis_1_endpoint            = (known after apply)

[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 12, in run "end-to-end":
[31mâ”‚[0m [0m  12:     condition     = [4mcan(aws_vpc.aws_networking_1.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 23, in run "end-to-end":
[31mâ”‚[0m [0m  23:     condition     = [4mcan(aws_kms_key.aws_provider_1_key)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_kms_key.aws_provider_1_key[0m is object with 16 attributes
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 34, in run "end-to-end":
[31mâ”‚[0m [0m  34:     condition     = [4maws_internet_gateway.aws_networking_1_gateway.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_internet_gateway.aws_networking_1_gateway.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 50, in run "end-to-end":
[31mâ”‚[0m [0m  50:     condition     = [4maws_subnet.aws_networking_1_subnet1.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet1.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 55, in run "end-to-end":
[31mâ”‚[0m [0m  55:     condition     = [4maws_subnet.aws_networking_1_subnet2.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_subnet.aws_networking_1_subnet2.vpc_id[0m is a string
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 61, in run "end-to-end":
[31mâ”‚[0m [0m  61:     condition     = [4mcan(aws_elasticache_cluster.aws_redis_1.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_cluster.aws_redis_1.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains([4maws_elasticache_cluster[0m.aws_redis_1.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_elasticache_cluster".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnsupported attribute[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1[4m.vpc_security_group_ids[0m, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThis object has no argument, nested block, or exported attribute named
[31mâ”‚[0m [0m"vpc_security_group_ids".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1.vpc_security_group_ids, [4maws_vpc[0m.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_vpc".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mTest assertion failed[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 77, in run "end-to-end":
[31mâ”‚[0m [0m  77:     condition     = [4mcan(regex("^redis[0-9.]", aws_elasticache_parameter_group.aws_redis_1_params.family))[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_parameter_group.aws_redis_1_params.family[0m is "default.redis7"
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mThe redis parameter group is invalid
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 83, in run "end-to-end":
[31mâ”‚[0m [0m  83:     condition     = [4mcan(aws_elasticache_subnet_group.aws_redis_1-subnetGroup.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_elasticache_subnet_group.aws_redis_1-subnetGroup.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 89, in run "end-to-end":
[31mâ”‚[0m [0m  89:     condition     = [4mcan(aws_cloudwatch_log_group.aws_redis_1_log_group.id)[0m[0m
[31mâ”‚[0m [0m    [90mâ”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
[31mâ”‚[0m [0m[0m    [90mâ”‚[0m [1maws_cloudwatch_log_group.aws_redis_1_log_group.id[0m is a string
[31mâ”‚[0m [0m[0m
[31mâ”‚[0m [0mCondition expression could not be evaluated at this time. This means you
[31mâ”‚[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31mâ”‚[0m [0myour condition depended on is not known until after the plan has been
[31mâ”‚[0m [0mapplied. Either remove this value from your condition, or execute an
[31mâ”‚[0m [0m`apply` command from this `run` block.
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = [4maws_elasticache_cluster[0m.aws_redis_1.log_delivery_configurations[0].destination == aws_cloudwatch_log_group.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_elasticache_cluster".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnsupported attribute[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = aws_elasticache_cluster.aws_redis_1[4m.log_delivery_configurations[0m[0].destination == aws_cloudwatch_log_group.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThis object has no argument, nested block, or exported attribute named
[31mâ”‚[0m [0m"log_delivery_configurations". Did you mean "log_delivery_configuration"?
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = aws_elasticache_cluster.aws_redis_1.log_delivery_configurations[0].destination == [4maws_cloudwatch_log_group[0m.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_cloudwatch_log_group".
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mcreating ElastiCache Parameter Group (stackmate-every-usual-production): InvalidParameterValue: CacheParameterGroupFamily default.redis7 is not a valid parameter group family.
[31mâ”‚[0m [0m	status code: 400, request id: b1fda1ef-a1f7-4c6b-b9ab-1da165783d9a[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  with aws_elasticache_parameter_group.aws_redis_1_params,
[31mâ”‚[0m [0m  on main.tf.json line 146, in resource.aws_elasticache_parameter_group.aws_redis_1_params:
[31mâ”‚[0m [0m 146:       [4m}[0m[0m
[31mâ”‚[0m [0m
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mcreating CloudWatch Logs Log Group (aws_redis_1-log-group): AccessDeniedException: User: arn:aws:sts::827160314823:assumed-role/StackmateEngineTestsRunner/aws-go-sdk-1700473907776177000 is not authorized to perform: logs:CreateLogGroup on resource: arn:aws:logs:eu-central-1:827160314823:log-group:aws_redis_1-log-group:log-stream: because no identity-based policy allows the logs:CreateLogGroup action
[31mâ”‚[0m [0m	status code: 400, request id: 97681f4a-db67-4452-bf29-f98089676ac5[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  with aws_cloudwatch_log_group.aws_redis_1_log_group,
[31mâ”‚[0m [0m  on main.tf.json line 157, in resource.aws_cloudwatch_log_group.aws_redis_1_log_group:
[31mâ”‚[0m [0m 157:       [4m}[0m[0m
[31mâ”‚[0m [0m
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mcreating ElastiCache Parameter Group (stackmate-slow-litmus-production): InvalidParameterValue: CacheParameterGroupFamily default.redis7 is not a valid parameter group family.
[31mâ”‚[0m [0m	status code: 400, request id: a2eeaefa-29f6-423f-8972-70c3750f2e04[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  with aws_elasticache_parameter_group.aws_redis_1_params,
[31mâ”‚[0m [0m  on main.tf.json line 147, in resource.aws_elasticache_parameter_group.aws_redis_1_params:
[31mâ”‚[0m [0m 147:       [4m}[0m[0m
[31mâ”‚[0m [0m
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mcreating ElastiCache Cache Cluster (powerless-airport-production): InvalidParameterValue: The account does not have any default subnets.
[31mâ”‚[0m [0m	status code: 400, request id: 0f2ea95c-0a3b-4861-8427-d9c1eda56df1[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  with aws_elasticache_cluster.aws_redis_1,
[31mâ”‚[0m [0m  on main.tf.json line 189, in resource.aws_elasticache_cluster.aws_redis_1:
[31mâ”‚[0m [0m 189:       [4m}[0m[0m
[31mâ”‚[0m [0m
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m

# data.aws_caller_identity.aws_provider_1_account_id:
data "aws_caller_identity" "aws_provider_1_account_id" {
    account_id = "827160314823"
    arn        = "arn:aws:sts::827160314823:assumed-role/StackmateEngineTestsRunner/aws-go-sdk-1700476296319887000"
    id         = "827160314823"
    user_id    = "AROA4BFUYYPDZXP6PM6RM:aws-go-sdk-1700476296319887000"
}

# aws_cloudwatch_log_group.aws_redis_1_log_group:
resource "aws_cloudwatch_log_group" "aws_redis_1_log_group" {
    arn               = "arn:aws:logs:eu-central-1:827160314823:log-group:aws_redis_1-log-group"
    id                = "aws_redis_1-log-group"
    name              = "aws_redis_1-log-group"
    retention_in_days = 0
    skip_destroy      = false
    tags_all          = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
}

# aws_elasticache_cluster.aws_redis_1:
resource "aws_elasticache_cluster" "aws_redis_1" {
    apply_immediately          = true
    arn                        = "arn:aws:elasticache:eu-central-1:827160314823:cluster:medium-pantology-production"
    auto_minor_version_upgrade = "true"
    availability_zone          = "eu-central-1b"
    az_mode                    = "single-az"
    cache_nodes                = [
        {
            address           = "medium-pantology-production.l4x1ms.0001.euc1.cache.amazonaws.com"
            availability_zone = "eu-central-1b"
            id                = "0001"
            outpost_arn       = ""
            port              = 6379
        },
    ]
    cluster_id                 = "medium-pantology-production"
    engine                     = "redis"
    engine_version             = "7.1"
    engine_version_actual      = "7.1.0"
    id                         = "medium-pantology-production"
    ip_discovery               = "ipv4"
    maintenance_window         = "sat:04:00-sat:05:00"
    network_type               = "ipv4"
    node_type                  = "cache.t3.micro"
    num_cache_nodes            = 1
    parameter_group_name       = "stackmate-medium-pantology-production"
    port                       = 6379
    security_group_ids         = [
        "sg-005ef52d3acce3e51",
    ]
    snapshot_retention_limit   = 7
    snapshot_window            = "03:00-04:00"
    subnet_group_name          = "medium-pantology-production-subnet-group"
    tags_all                   = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
    transit_encryption_enabled = false

    log_delivery_configuration {
        destination      = "aws_redis_1-log-group"
        destination_type = "cloudwatch-logs"
        log_format       = "text"
        log_type         = "slow-log"
    }
}

# aws_elasticache_parameter_group.aws_redis_1_params:
resource "aws_elasticache_parameter_group" "aws_redis_1_params" {
    arn         = "arn:aws:elasticache:eu-central-1:827160314823:parametergroup:stackmate-medium-pantology-production"
    description = "Managed by Terraform"
    family      = "redis7"
    id          = "stackmate-medium-pantology-production"
    name        = "stackmate-medium-pantology-production"
    tags_all    = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
}

# aws_elasticache_subnet_group.aws_redis_1-subnetGroup:
resource "aws_elasticache_subnet_group" "aws_redis_1-subnetGroup" {
    arn         = "arn:aws:elasticache:eu-central-1:827160314823:subnetgroup:medium-pantology-production-subnet-group"
    description = "Managed by Terraform"
    id          = "medium-pantology-production-subnet-group"
    name        = "medium-pantology-production-subnet-group"
    subnet_ids  = [
        "subnet-031873b3821f36e2e",
        "subnet-0c54488b448562b28",
    ]
    tags_all    = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
}

# aws_internet_gateway.aws_networking_1_gateway:
resource "aws_internet_gateway" "aws_networking_1_gateway" {
    arn      = "arn:aws:ec2:eu-central-1:827160314823:internet-gateway/igw-0f5a5e252305ea9ce"
    id       = "igw-0f5a5e252305ea9ce"
    owner_id = "827160314823"
    tags_all = {}
    vpc_id   = "vpc-0ef4e14c6d92bd4ca"
}

# aws_kms_key.aws_provider_1_key:
resource "aws_kms_key" "aws_provider_1_key" {
    arn                                = "arn:aws:kms:eu-central-1:827160314823:key/1449ad44-6d41-475e-bb32-f6d2390d7507"
    bypass_policy_lockout_safety_check = false
    customer_master_key_spec           = "SYMMETRIC_DEFAULT"
    deletion_window_in_days            = 30
    description                        = "Stackmate default encryption key"
    enable_key_rotation                = false
    id                                 = "1449ad44-6d41-475e-bb32-f6d2390d7507"
    is_enabled                         = true
    key_id                             = "1449ad44-6d41-475e-bb32-f6d2390d7507"
    key_usage                          = "ENCRYPT_DECRYPT"
    multi_region                       = false
    policy                             = jsonencode(
        {
            Id        = "key-default-1"
            Statement = [
                {
                    Action    = "kms:*"
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::827160314823:root"
                    }
                    Resource  = "*"
                    Sid       = "Enable IAM User Permissions"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    tags_all                           = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
}

# aws_subnet.aws_networking_1_subnet1:
resource "aws_subnet" "aws_networking_1_subnet1" {
    arn                                            = "arn:aws:ec2:eu-central-1:827160314823:subnet/subnet-031873b3821f36e2e"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1a"
    availability_zone_id                           = "euc1-az2"
    cidr_block                                     = "10.0.1.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-031873b3821f36e2e"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "827160314823"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags_all                                       = {}
    vpc_id                                         = "vpc-0ef4e14c6d92bd4ca"
}

# aws_subnet.aws_networking_1_subnet2:
resource "aws_subnet" "aws_networking_1_subnet2" {
    arn                                            = "arn:aws:ec2:eu-central-1:827160314823:subnet/subnet-0c54488b448562b28"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1b"
    availability_zone_id                           = "euc1-az3"
    cidr_block                                     = "10.0.2.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0c54488b448562b28"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "827160314823"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags_all                                       = {}
    vpc_id                                         = "vpc-0ef4e14c6d92bd4ca"
}

# aws_vpc.aws_networking_1:
resource "aws_vpc" "aws_networking_1" {
    arn                                  = "arn:aws:ec2:eu-central-1:827160314823:vpc/vpc-0ef4e14c6d92bd4ca"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.0.0.0/16"
    default_network_acl_id               = "acl-0fd7141e4a94f4884"
    default_route_table_id               = "rtb-0d07d899c382d594b"
    default_security_group_id            = "sg-005ef52d3acce3e51"
    dhcp_options_id                      = "dopt-d6bcdabf"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-0ef4e14c6d92bd4ca"
    instance_tenancy                     = "default"
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-0d07d899c382d594b"
    owner_id                             = "827160314823"
    tags_all                             = {}
}


Outputs:

aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
aws_networking_1_vpc_id = "vpc-0ef4e14c6d92bd4ca"
aws_provider_1_kms_key_id = "arn:aws:kms:eu-central-1:827160314823:key/1449ad44-6d41-475e-bb32-f6d2390d7507"
aws_redis_1_endpoint = "medium-pantology-production.l4x1ms.0001.euc1.cache.amazonaws.com"

[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains([4maws_elasticache_cluster[0m.aws_redis_1.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_elasticache_cluster".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnsupported attribute[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1[4m.vpc_security_group_ids[0m, aws_vpc.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThis object has no argument, nested block, or exported attribute named
[31mâ”‚[0m [0m"vpc_security_group_ids".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31mâ”‚[0m [0m  66:     condition     = contains(aws_elasticache_cluster.aws_redis_1.vpc_security_group_ids, [4maws_vpc[0m.aws_networking_1.default_security_group_id)[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_vpc".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = [4maws_elasticache_cluster[0m.aws_redis_1.log_delivery_configurations[0].destination == aws_cloudwatch_log_group.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_elasticache_cluster".
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnsupported attribute[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = aws_elasticache_cluster.aws_redis_1[4m.log_delivery_configurations[0m[0].destination == aws_cloudwatch_log_group.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThis object has no argument, nested block, or exported attribute named
[31mâ”‚[0m [0m"log_delivery_configurations". Did you mean "log_delivery_configuration"?
[31mâ•µ[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mUnknown variable[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on main.tftest.hcl line 94, in run "end-to-end":
[31mâ”‚[0m [0m  94:     condition     = aws_elasticache_cluster.aws_redis_1.log_delivery_configurations[0].destination == [4maws_cloudwatch_log_group[0m.aws_redis_1_log_group.name[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThere is no variable named "aws_cloudwatch_log_group".
[31mâ•µ[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [32mpass[0m[0m

# data.aws_caller_identity.aws_provider_1_account_id:
data "aws_caller_identity" "aws_provider_1_account_id" {
    account_id = "827160314823"
    arn        = "arn:aws:sts::827160314823:assumed-role/StackmateEngineTestsRunner/aws-go-sdk-1700480247466205000"
    id         = "827160314823"
    user_id    = "AROA4BFUYYPDZXP6PM6RM:aws-go-sdk-1700480247466205000"
}

# aws_cloudwatch_log_group.aws_redis_1_log_group:
resource "aws_cloudwatch_log_group" "aws_redis_1_log_group" {
    arn               = "arn:aws:logs:eu-central-1:827160314823:log-group:aws_redis_1-log-group"
    id                = "aws_redis_1-log-group"
    name              = "aws_redis_1-log-group"
    retention_in_days = 0
    skip_destroy      = false
    tags_all          = {}
}

# aws_elasticache_cluster.aws_redis_1:
resource "aws_elasticache_cluster" "aws_redis_1" {
    apply_immediately          = true
    arn                        = "arn:aws:elasticache:eu-central-1:827160314823:cluster:mushy-dose-production"
    auto_minor_version_upgrade = "true"
    availability_zone          = "eu-central-1b"
    az_mode                    = "single-az"
    cache_nodes                = [
        {
            address           = "mushy-dose-production.l4x1ms.0001.euc1.cache.amazonaws.com"
            availability_zone = "eu-central-1b"
            id                = "0001"
            outpost_arn       = ""
            port              = 6379
        },
    ]
    cluster_id                 = "mushy-dose-production"
    engine                     = "redis"
    engine_version             = "7.1"
    engine_version_actual      = "7.1.0"
    id                         = "mushy-dose-production"
    ip_discovery               = "ipv4"
    maintenance_window         = "fri:03:30-fri:04:30"
    network_type               = "ipv4"
    node_type                  = "cache.t3.micro"
    num_cache_nodes            = 1
    parameter_group_name       = "stackmate-mushy-dose-production"
    port                       = 6379
    security_group_ids         = [
        "sg-0385c27102028eef5",
    ]
    snapshot_retention_limit   = 7
    snapshot_window            = "23:00-00:00"
    subnet_group_name          = "mushy-dose-production-subnet-group"
    tags_all                   = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
    transit_encryption_enabled = false

    log_delivery_configuration {
        destination      = "aws_redis_1-log-group"
        destination_type = "cloudwatch-logs"
        log_format       = "text"
        log_type         = "slow-log"
    }
}

# aws_elasticache_parameter_group.aws_redis_1_params:
resource "aws_elasticache_parameter_group" "aws_redis_1_params" {
    arn         = "arn:aws:elasticache:eu-central-1:827160314823:parametergroup:stackmate-mushy-dose-production"
    description = "Managed by Terraform"
    family      = "redis7"
    id          = "stackmate-mushy-dose-production"
    name        = "stackmate-mushy-dose-production"
    tags_all    = {}
}

# aws_elasticache_subnet_group.aws_redis_1_subnet_group:
resource "aws_elasticache_subnet_group" "aws_redis_1_subnet_group" {
    arn         = "arn:aws:elasticache:eu-central-1:827160314823:subnetgroup:mushy-dose-production-subnet-group"
    description = "Managed by Terraform"
    id          = "mushy-dose-production-subnet-group"
    name        = "mushy-dose-production-subnet-group"
    subnet_ids  = [
        "subnet-020afd23e5a6720a8",
        "subnet-0900f2b80c43ef585",
    ]
    tags_all    = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
}

# aws_internet_gateway.aws_networking_1_gateway:
resource "aws_internet_gateway" "aws_networking_1_gateway" {
    arn      = "arn:aws:ec2:eu-central-1:827160314823:internet-gateway/igw-02112c51b05086bbb"
    id       = "igw-02112c51b05086bbb"
    owner_id = "827160314823"
    tags_all = {}
    vpc_id   = "vpc-0f424cac99b43271e"
}

# aws_kms_key.aws_provider_1_key:
resource "aws_kms_key" "aws_provider_1_key" {
    arn                                = "arn:aws:kms:eu-central-1:827160314823:key/a04b4b38-8b7d-4694-b92c-e3ad42378c2d"
    bypass_policy_lockout_safety_check = false
    customer_master_key_spec           = "SYMMETRIC_DEFAULT"
    deletion_window_in_days            = 30
    description                        = "Stackmate default encryption key"
    enable_key_rotation                = false
    id                                 = "a04b4b38-8b7d-4694-b92c-e3ad42378c2d"
    is_enabled                         = true
    key_id                             = "a04b4b38-8b7d-4694-b92c-e3ad42378c2d"
    key_usage                          = "ENCRYPT_DECRYPT"
    multi_region                       = false
    policy                             = jsonencode(
        {
            Id        = "key-default-1"
            Statement = [
                {
                    Action    = "kms:*"
                    Effect    = "Allow"
                    Principal = {
                        AWS = "arn:aws:iam::827160314823:root"
                    }
                    Resource  = "*"
                    Sid       = "Enable IAM User Permissions"
                },
            ]
            Version   = "2012-10-17"
        }
    )
    tags_all                           = {
        "Description" = "Deployed by Stackmate"
        "Environment" = "production"
    }
}

# aws_subnet.aws_networking_1_subnet1:
resource "aws_subnet" "aws_networking_1_subnet1" {
    arn                                            = "arn:aws:ec2:eu-central-1:827160314823:subnet/subnet-020afd23e5a6720a8"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1a"
    availability_zone_id                           = "euc1-az2"
    cidr_block                                     = "10.0.1.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-020afd23e5a6720a8"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "827160314823"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags_all                                       = {}
    vpc_id                                         = "vpc-0f424cac99b43271e"
}

# aws_subnet.aws_networking_1_subnet2:
resource "aws_subnet" "aws_networking_1_subnet2" {
    arn                                            = "arn:aws:ec2:eu-central-1:827160314823:subnet/subnet-0900f2b80c43ef585"
    assign_ipv6_address_on_creation                = false
    availability_zone                              = "eu-central-1b"
    availability_zone_id                           = "euc1-az3"
    cidr_block                                     = "10.0.2.0/24"
    enable_dns64                                   = false
    enable_lni_at_device_index                     = 0
    enable_resource_name_dns_a_record_on_launch    = false
    enable_resource_name_dns_aaaa_record_on_launch = false
    id                                             = "subnet-0900f2b80c43ef585"
    ipv6_native                                    = false
    map_customer_owned_ip_on_launch                = false
    map_public_ip_on_launch                        = true
    owner_id                                       = "827160314823"
    private_dns_hostname_type_on_launch            = "ip-name"
    tags_all                                       = {}
    vpc_id                                         = "vpc-0f424cac99b43271e"
}

# aws_vpc.aws_networking_1:
resource "aws_vpc" "aws_networking_1" {
    arn                                  = "arn:aws:ec2:eu-central-1:827160314823:vpc/vpc-0f424cac99b43271e"
    assign_generated_ipv6_cidr_block     = false
    cidr_block                           = "10.0.0.0/16"
    default_network_acl_id               = "acl-0f167a224a373dac6"
    default_route_table_id               = "rtb-0ddd049e1eb01fef1"
    default_security_group_id            = "sg-0385c27102028eef5"
    dhcp_options_id                      = "dopt-d6bcdabf"
    enable_dns_hostnames                 = true
    enable_dns_support                   = true
    enable_network_address_usage_metrics = false
    id                                   = "vpc-0f424cac99b43271e"
    instance_tenancy                     = "default"
    ipv6_netmask_length                  = 0
    main_route_table_id                  = "rtb-0ddd049e1eb01fef1"
    owner_id                             = "827160314823"
    tags_all                             = {}
}


Outputs:

aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
aws_networking_1_vpc_id = "vpc-0f424cac99b43271e"
aws_provider_1_kms_key_id = "arn:aws:kms:eu-central-1:827160314823:key/a04b4b38-8b7d-4694-b92c-e3ad42378c2d"
aws_redis_1_endpoint = "mushy-dose-production.l4x1ms.0001.euc1.cache.amazonaws.com"

main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [32mpass[0m[0m

[32mSuccess![0m[0m 1 passed, 0 failed.
