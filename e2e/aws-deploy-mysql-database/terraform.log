
[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_db_instance.aws_mysql_1[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "aws_mysql_1" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 30
      [32m+[0m[0m allow_major_version_upgrade           = false
      [32m+[0m[0m apply_immediately                     = true
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m backup_retention_period               = 0
      [32m+[0m[0m backup_target                         = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = true
      [32m+[0m[0m db_name                               = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m deletion_protection                   = false
      [32m+[0m[0m enabled_cloudwatch_logs_exports       = [
          [32m+[0m[0m "audit",
          [32m+[0m[0m "error",
          [32m+[0m[0m "general",
          [32m+[0m[0m "slowquery",
        ]
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "mysql"
      [32m+[0m[0m engine_version                        = "8.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "impassioned-fencing-production"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t3.micro"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m manage_master_user_password           = true
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = false
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = (known after apply)
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = 3306
      [32m+[0m[0m publicly_accessible                   = false
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = "gp2"
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "stackmateImpassionedFencingRoot"
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # aws_db_parameter_group.aws_mysql_1_params[0m will be created
[0m  [32m+[0m[0m resource "aws_db_parameter_group" "aws_mysql_1_params" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Deployed by Stackmate"
      [32m+[0m[0m family      = "mysql8.0"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = "stackmate-impassioned-fencing-production"
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # aws_db_subnet_group.aws_mysql_1-subnetGroup[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "aws_mysql_1-subnetGroup" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Deployed by Stackmate"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m name_prefix             = "impassioned-fencing-production"
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # aws_internet_gateway.aws_networking_1_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "aws_networking_1_gateway" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # aws_kms_key.aws_provider_1_key[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "aws_provider_1_key" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 30
      [32m+[0m[0m description                        = "Stackmate default encryption key"
      [32m+[0m[0m enable_key_rotation                = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = false
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_subnet.aws_networking_1_subnet1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.aws_networking_1_subnet2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_vpc.aws_networking_1[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "aws_networking_1" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1mPlan:[0m 8 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aws_mysql_1_endpoint            = (known after apply)
  [32m+[0m[0m aws_mysql_1_secret              = (sensitive value)
  [32m+[0m[0m aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
  [32m+[0m[0m aws_networking_1_vpc_id         = (known after apply)
  [32m+[0m[0m aws_provider_1_kms_key_id       = (known after apply)

[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 12, in run "end-to-end":
[31m│[0m [0m  12:     condition     = [4mcan(aws_vpc.aws_networking_1.id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 23, in run "end-to-end":
[31m│[0m [0m  23:     condition     = [4mcan(aws_kms_key.aws_provider_1_key)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_kms_key.aws_provider_1_key[0m is object with 16 attributes
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 34, in run "end-to-end":
[31m│[0m [0m  34:     condition     = [4maws_internet_gateway.aws_networking_1_gateway.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_internet_gateway.aws_networking_1_gateway.vpc_id[0m is a string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 50, in run "end-to-end":
[31m│[0m [0m  50:     condition     = [4maws_subnet.aws_networking_1_subnet1.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_subnet.aws_networking_1_subnet1.vpc_id[0m is a string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 55, in run "end-to-end":
[31m│[0m [0m  55:     condition     = [4maws_subnet.aws_networking_1_subnet2.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_subnet.aws_networking_1_subnet2.vpc_id[0m is a string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 61, in run "end-to-end":
[31m│[0m [0m  61:     condition     = [4mcan(aws_db_instance.aws_mysql_1.id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_db_instance.aws_mysql_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31m│[0m [0m  66:     condition     = [4mcontains(aws_db_instance.aws_mysql_1.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_db_instance.aws_mysql_1.vpc_security_group_ids[0m is a set of string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.default_security_group_id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 83, in run "end-to-end":
[31m│[0m [0m  83:     condition     = [4mcan(aws_db_subnet_group.aws_mysql_1-subnetGroup.id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_db_subnet_group.aws_mysql_1-subnetGroup.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.

[0m[1mInitializing the backend...[0m
[0m[0m[1mBackend configuration changed![0m

Terraform has detected that the configuration specified for the backend
has changed. Terraform will now check for existing state in the backends.
[0m
[0m[32m
Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.[0m

[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.25.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
main.tftest.hcl... [37min progress[0m
[0m  run "end-to-end"... [31mfail[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_db_instance.aws_mysql_1[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "aws_mysql_1" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 30
      [32m+[0m[0m allow_major_version_upgrade           = false
      [32m+[0m[0m apply_immediately                     = true
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m backup_retention_period               = 0
      [32m+[0m[0m backup_target                         = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = true
      [32m+[0m[0m db_name                               = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m deletion_protection                   = false
      [32m+[0m[0m enabled_cloudwatch_logs_exports       = [
          [32m+[0m[0m "audit",
          [32m+[0m[0m "error",
          [32m+[0m[0m "general",
          [32m+[0m[0m "slowquery",
        ]
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "mysql"
      [32m+[0m[0m engine_version                        = "8.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "playful-judge-production"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t3.micro"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m manage_master_user_password           = true
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = false
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = (known after apply)
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = 3306
      [32m+[0m[0m publicly_accessible                   = false
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = "gp2"
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "stackmatePlayfulJudgeRoot"
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # aws_db_parameter_group.aws_mysql_1_params[0m will be created
[0m  [32m+[0m[0m resource "aws_db_parameter_group" "aws_mysql_1_params" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Deployed by Stackmate"
      [32m+[0m[0m family      = "mysql8.0"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = "stackmate-playful-judge-production"
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # aws_db_subnet_group.aws_mysql_1-subnetGroup[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "aws_mysql_1-subnetGroup" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Deployed by Stackmate"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m name_prefix             = "playful-judge-production"
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # aws_internet_gateway.aws_networking_1_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "aws_networking_1_gateway" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # aws_kms_key.aws_provider_1_key[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "aws_provider_1_key" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 30
      [32m+[0m[0m description                        = "Stackmate default encryption key"
      [32m+[0m[0m enable_key_rotation                = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = false
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Description" = "Deployed by Stackmate"
          [32m+[0m[0m "Environment" = "production"
        }
    }

[1m  # aws_subnet.aws_networking_1_subnet1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.aws_networking_1_subnet2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "aws_networking_1_subnet2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "eu-central-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_vpc.aws_networking_1[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "aws_networking_1" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1mPlan:[0m 8 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m aws_mysql_1_endpoint            = (known after apply)
  [32m+[0m[0m aws_mysql_1_secret              = (sensitive value)
  [32m+[0m[0m aws_networking_1_vpc_cidr_block = "10.0.0.0/16"
  [32m+[0m[0m aws_networking_1_vpc_id         = (known after apply)
  [32m+[0m[0m aws_provider_1_kms_key_id       = (known after apply)

[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 12, in run "end-to-end":
[31m│[0m [0m  12:     condition     = [4mcan(aws_vpc.aws_networking_1.id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 23, in run "end-to-end":
[31m│[0m [0m  23:     condition     = [4mcan(aws_kms_key.aws_provider_1_key)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_kms_key.aws_provider_1_key[0m is object with 16 attributes
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 34, in run "end-to-end":
[31m│[0m [0m  34:     condition     = [4maws_internet_gateway.aws_networking_1_gateway.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_internet_gateway.aws_networking_1_gateway.vpc_id[0m is a string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 50, in run "end-to-end":
[31m│[0m [0m  50:     condition     = [4maws_subnet.aws_networking_1_subnet1.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_subnet.aws_networking_1_subnet1.vpc_id[0m is a string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 55, in run "end-to-end":
[31m│[0m [0m  55:     condition     = [4maws_subnet.aws_networking_1_subnet2.vpc_id == aws_vpc.aws_networking_1.id[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_subnet.aws_networking_1_subnet2.vpc_id[0m is a string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 61, in run "end-to-end":
[31m│[0m [0m  61:     condition     = [4mcan(aws_db_instance.aws_mysql_1.id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_db_instance.aws_mysql_1.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 66, in run "end-to-end":
[31m│[0m [0m  66:     condition     = [4mcontains(aws_db_instance.aws_mysql_1.vpc_security_group_ids, aws_vpc.aws_networking_1.default_security_group_id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_db_instance.aws_mysql_1.vpc_security_group_ids[0m is a set of string
[31m│[0m [0m[0m    [90m│[0m [1maws_vpc.aws_networking_1.default_security_group_id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mUnknown condition value[0m
[31m│[0m [0m
[31m│[0m [0m[0m  on main.tftest.hcl line 83, in run "end-to-end":
[31m│[0m [0m  83:     condition     = [4mcan(aws_db_subnet_group.aws_mysql_1-subnetGroup.id)[0m[0m
[31m│[0m [0m    [90m├────────────────[0m
[31m│[0m [0m[0m    [90m│[0m [1maws_db_subnet_group.aws_mysql_1-subnetGroup.id[0m is a string
[31m│[0m [0m[0m
[31m│[0m [0mCondition expression could not be evaluated at this time. This means you
[31m│[0m [0mhave executed a `run` block with `command = plan` and one of the values
[31m│[0m [0myour condition depended on is not known until after the plan has been
[31m│[0m [0mapplied. Either remove this value from your condition, or execute an
[31m│[0m [0m`apply` command from this `run` block.
[31m╵[0m[0m
main.tftest.hcl... [37mtearing down[0m
[0mmain.tftest.hcl... [31mfail[0m[0m

[31mFailure![0m[0m 0 passed, 1 failed.
